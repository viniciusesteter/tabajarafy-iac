name: CI/CD TabajaraFy

on:
  push:
    branches:
      - master
    paths:
      - "terraform/**"
      - "helm/**"

jobs:
  validation:
    name: Validation
    runs-on: ubuntu-latest
    outputs:
      removed: ${{ steps.setting_output.outputs.file_removed }}
    steps:
      - name: Checkout code
        id: checkout
        uses: actions/checkout@v5.0.0

      - name: Get changed files
        id: changed_files
        uses: jitterbit/get-changed-files@v1
        continue-on-error: true

      - name: Set output
        id: setting_output
        run: |
          if [ -n "${{ steps.changed_files.outputs.removed }}" ]; then
            echo "file_removed=true" >> $GITHUB_OUTPUT
          else
            echo "file_removed=false" >> $GITHUB_OUTPUT
          fi

  deploy:
    name: Deploy IaC and Application TabajaraFy
    needs: validation
    if: needs.validation.outputs.removed == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        id: checkout
        uses: actions/checkout@v5.0.0

      - name: Configure AWS credentials
        id: aws_credentials
        uses: aws-actions/configure-aws-credentials@v5.0.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        id: terraform_setup
        uses: hashicorp/setup-terraform@v3.1.2
        with:
          terraform_version: "1.13.2"

      - name: Terraform Init
        id: terraform_init
        working-directory: terraform
        run: terraform init

      - name: Terraform Plan
        id: terraform_plan
        working-directory: terraform
        run: terraform plan

      - name: Terraform Apply
        id: terraform_apply
        working-directory: terraform
        run: terraform apply -auto-approve

      - name: Update kubeconfig
        id: kubeconfig
        run: |
          aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name tabajarafy-eks

      - name: Setup kubectl
        id: setup_kubectl
        uses: azure/setup-kubectl@v4.0.1

      - name: Setup Helm
        id: setup_helm
        uses: azure/setup-helm@v4.3.1
        with:
          version: "3.19.0"

      - name: Cluster AutoScaler
        id: cluster_autoscaler
        run: |
          helm repo add autoscaler https://kubernetes.github.io/autoscaler
          helm repo update
          helm upgrade --install cluster-autoscaler autoscaler/cluster-autoscaler --namespace kube-system --set autoDiscovery.clusterName=tabajarafy-eks --set awsRegion=${{ env.AWS_REGION }} --set awsAccessKeyID=${{ secrets.AWS_ACCESS_KEY_ID }} --set awsSecretAccessKey=${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Deploy Prometheus/Grafana
        id: deploy_prometheus_grafana
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo update
          helm upgrade --install monitoring prometheus-community/kube-prometheus-stack --namespace monitoring --create-namespace --values helm/prometheus-grafana-values.yaml --set grafana.adminPassword=${{ secrets.GRAFANA_ADMIN_PASSWORD }}

      - name: Install metrics-server
        id: install_metrics_server
        run: |
          kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml

      - name: Deploy TabajaraFy chart
        id: deploy_tabajarafy
        run: helm upgrade --install tabajarafy helm/tabajarafy-chart --namespace tabajarafy --create-namespace

      - name: Rollout TabajaraFy chart
        id: rollout_tabajarafy
        run: |
          kubectl rollout restart deployment/tabajarafy -n tabajarafy
          kubectl rollout status deployment/tabajarafy -n tabajarafy --timeout=60s

      - name: Smoke test
        id: smoke_test
        run: |
          kubectl get svc -n tabajarafy
          kubectl get pods -n tabajarafy

      - name: Get Application URL
        run: |
          APP_URL=$(kubectl get svc -n tabajarafy tabajarafy -o jsonpath="{.status.loadBalancer.ingress[0].hostname}")
          echo "Application URL: http://$APP_URL"

  destroy:
    name: Uninstall Application TabajaraFy and Destroy IaC
    needs: validation
    if: needs.validation.outputs.removed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        id: checkout
        uses: actions/checkout@v5.0.0

      - name: Configure AWS credentials
        id: aws_credentials
        uses: aws-actions/configure-aws-credentials@v5.0.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        id: terraform_setup
        uses: hashicorp/setup-terraform@v3.1.2
        with:
          terraform_version: "1.13.2"

      - name: Setup Helm
        id: setup_helm
        uses: azure/setup-helm@v4.3.1
        with:
          version: "3.19.0"

      - name: Uninstall Helm Apps
        id: uninstall_helm_apps
        run: |
          helm uninstall tabajarafy --namespace tabajarafy
          helm uninstall monitoring --namespace monitoring
          helm uninstall cluster-autoscaler --namespace kube-system

      - name: Terraform Init
        id: terraform_init
        working-directory: terraform
        run: terraform init

      - name: Terraform Plan
        id: terraform_plan
        working-directory: terraform
        run: terraform plan

      - name: Terraform Destroy
        id: terraform_destroy
        working-directory: terraform
        run: terraform destroy -auto-approve
